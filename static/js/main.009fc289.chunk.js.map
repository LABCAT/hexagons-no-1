{"version":3,"sources":["js/ShuffleArray.js","js/BackgroundHexagon.js","js/globals.js","audio/rectangles-no-3.ogg","audio/rectangles-no-3.mid","js/P5Sketch.js","js/App.js","index.js"],"names":["ShuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","BackgroundHexagon","p5","x","y","colour","hasFill","maxSize","this","p","radius","stroke","fill","noFill","r","angleMode","RADIANS","angle","TWO_PI","beginShape","a","sx","cos","sy","sin","vertex","endShape","CLOSE","window","P5Sketch","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","isLoaded","cueSet1Completed","cueSet2Completed","i","coloursArray","colourSets","strokeColour","g","b","fillColour","noteSet1","noteSet1CurrentCue","hexSizeDivider","innerHexCount","noteSet2","noteSet2CurrentCue","backgroundHexagons","outroHexagons","outroFills","outroStrokes","preload","Tone","PPQ","randomColor","require","luminosity","count","format","Midi","fromUrl","midi","then","result","tracks","notes","loadColours","player","audio","toMaster","sync","start","lastTicks","note","ticks","schedule","executeNoteSet1","time","executeNoteSet2","setup","createCanvas","background","frameRate","redrawBG","draw","state","update","animateHexagons1","width","height","currentCue","includes","push","delayAmount","parseInt","duration","size","colours","setTimeout","color","hexagon","strokeWeight","getColourValue","colours1","colourSet","colours2","reverse","value","negation","mousePressed","pause","creditsLogged","logCredits","song","currentTime","buffer","console","log","reset","clear","updateCanvasDimensions","redraw","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.009fc289.chunk.js","sourcesContent":["function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","export default class BackgroundHexagon  {\n\n    constructor(p5, x, y, colour, hasFill, maxSize = 10000) {\n        this.p = p5;\n        this.x = x;\n        this.y = y;\n        this.colour = colour;\n        this.hasFill = hasFill;\n        this.maxSize = maxSize;\n        this.radius = 1;\n    }\n\n    draw() {\n        this.p.stroke(this.colour);\n        if(this.hasFill){\n            this.p.fill(this.colour);\n        }\n        else {\n            this.p.noFill();\n        }\n        const r = this.radius / 2;\n        this.p.angleMode(this.p.RADIANS);\n        var angle = this.p.TWO_PI / 6;\n        this.p.beginShape();\n        for (let a = this.p.TWO_PI / 12; a < this.p.TWO_PI + this.p.TWO_PI / 12; a += angle) {\n            let sx = this.x + this.p.cos(a) * r;\n            let sy = this.y + this.p.sin(a) * r;\n            this.p.vertex(sx, sy);\n        }\n        this.p.endShape(this.p.CLOSE);\n    }\n\n    update() {\n        if(this.radius < this.maxSize){\n            this.radius = this.radius + 20;\n        }\n    }\n}","import * as p5 from \"p5\";\nwindow.p5 = p5;","export default __webpack_public_path__ + \"static/media/rectangles-no-3.0eed2b58.ogg\";","export default __webpack_public_path__ + \"static/media/rectangles-no-3.c1106bbb.mid\";","import React, { useRef, useEffect } from \"react\";\n//import PlayIcon from \"./PlayIcon.js\";\nimport ShuffleArray from \"./ShuffleArray.js\";\nimport BackgroundHexagon from './BackgroundHexagon.js';\nimport \"./globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport audio from \"../audio/rectangles-no-3.ogg\";\nimport midi from \"../audio/rectangles-no-3.mid\";\nimport * as Tone from 'tone'\nimport { Midi } from '@tonejs/midi'\n\nconst P5Sketch = () => {\n  const sketchRef = useRef();\n\n  const Sketch = (p) => {\n    p.canvas = null;\n\n    p.canvasWidth = window.innerWidth;\n\n    p.canvasHeight = window.innerHeight;\n\n    p.isLoaded = false;\n\n    p.cueSet1Completed = [];\n\n    p.cueSet2Completed = [];\n\n    p.i = 0;\n\n    p.coloursArray = [0, 255, \"variable\"];\n\n    p.colourSets = [];\n\n    p.strokeColour = {\n      r: 0,\n      g: 0,\n      b: 0,\n    };\n\n    p.fillColour = {\n      r: 0,\n      g: 0,\n      b: 0,\n    };\n\n    p.noteSet1 = [];\n\n    p.noteSet1CurrentCue = 0;\n\n    p.hexSizeDivider = 16;\n\n    p.innerHexCount = 1;\n\n    p.noteSet2 = [];\n\n    p.noteSet2CurrentCue = 1;\n    \n    p.backgroundHexagons = [];\n\n    p.outroHexagons = [];\n\n    p.outroFills = [];\n    \n    p.outroStrokes = [];\n\n    p.preload = () => {\n      //p.song = p.loadSound(audio);\n      Tone.Transport.PPQ = 3840 * 4;\n      p.randomColor = require('randomcolor');\n      p.outroFills = p.randomColor({luminosity: 'dark', count: 14, format: 'rgbArray'});\n      p.outroStrokes = p.randomColor({luminosity: 'bright', count: 14, format: 'rgbArray'});\n      Midi.fromUrl(midi).then(\n        function(result) {\n          \n          p.noteSet1 = result.tracks[3].notes;//Sampler 1\n          p.noteSet2 = result.tracks[7].notes;//Synth 3\n          p.loadColours();\n          p.player = new Tone.Player(audio).toMaster();\n          p.player.sync().start(0);\n          let lastTicks = -1;\n          for (let i = 0; i < p.noteSet1.length; i++) {\n            const note = p.noteSet1[i],\n              { ticks } = note;\n            if(ticks !== lastTicks){\n              Tone.Transport.schedule(\n                () => {\n                  p.executeNoteSet1(p.noteSet1CurrentCue);\n                  p.noteSet1CurrentCue++\n                }, \n                note.time\n              );\n              lastTicks = ticks;\n            }\n          }\n\n          lastTicks = -1;\n          for (let i = 0; i < p.noteSet2.length; i++) {\n            const note = p.noteSet2[i],\n              { time, ticks } = note;\n            if(ticks !== lastTicks){\n              Tone.Transport.schedule(\n                () => {\n                  p.executeNoteSet2(p.noteSet2CurrentCue);\n                  p.noteSet2CurrentCue++\n                }, \n                time\n              );\n              lastTicks = ticks;\n            }\n          }        \n          p.isLoaded = true;\n        }\n      );\n    };\n\n    p.setup = () => {\n      p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n      p.background(0);\n      p.frameRate(30);\n      \n    };\n\n    p.redrawBG = true;\n\n    p.draw = () => {\n      if (p.player.state === 'started' && p.isLoaded) {\n        if(p.redrawBG){\n          p.background(0);\n        }\n        for (let i = 0; i < p.backgroundHexagons.length; i++) {\n            p.backgroundHexagons[i].update();\n            p.backgroundHexagons[i].draw();\n        }\n        p.animateHexagons1(p.width / 2, p.height / 2, p.width / p.hexSizeDivider);\n        p.i = p.i + 16;\n        for (let i = 0; i < p.outroHexagons.length; i++) {\n            p.outroHexagons[i].update();\n            p.outroHexagons[i].draw();\n        }\n      }\n    };\n\n    p.executeNoteSet1 = (currentCue) => {\n      if (!p.cueSet1Completed.includes(currentCue)) {\n        p.cueSet1Completed.push(currentCue);\n        p.i = 0;\n        p.strokeColour.r = p.colourSets[currentCue].strokeColour.r;\n        p.strokeColour.g = p.colourSets[currentCue].strokeColour.g;\n        p.strokeColour.b = p.colourSets[currentCue].strokeColour.b;\n        p.fillColour.r = p.colourSets[currentCue].fillColour.r;\n        p.fillColour.g = p.colourSets[currentCue].fillColour.g;\n        p.fillColour.b = p.colourSets[currentCue].fillColour.b;\n        if(currentCue > 78){\n          p.hexSizeDivider = 12;\n          p.innerHexCount = 2;\n        }\n        if(currentCue >= 119){\n          p.redrawBG = false;\n          p.strokeColour.r = p.outroStrokes[currentCue-119][0];\n          p.strokeColour.g = p.outroStrokes[currentCue-119][1];\n          p.strokeColour.b = p.outroStrokes[currentCue-119][2];\n          p.fillColour.r = p.outroFills[currentCue-119][0];\n          p.fillColour.g = p.outroFills[currentCue-119][1];\n          p.fillColour.b = p.outroFills[currentCue-119][2];\n        }\n        if(currentCue === 132){\n          const delayAmount = parseInt(p.noteSet1[p.noteSet1.length - 1].duration * 1000) / 24;\n          let size = (p.width / p.hexSizeDivider) * 4;\n          const colours = p.randomColor({count: 24});\n          for (let i = 0; i < 24; i++) {\n            setTimeout(\n                function () {\n                  const colour = p.color(colours[i]);\n                  p.outroHexagons.push(new BackgroundHexagon(p, p.width / 2, p.height / 2, colour, true, size));\n                  p.hexagon(p.width / 2, p.height / 2, size);\n                  size = size - size / 24;\n                },\n                (delayAmount * i)\n            );\n          }\n        }\n      }\n    };\n\n    p.executeNoteSet2 = (currentCue) => {\n      if (!p.cueSet2Completed.includes(currentCue)) {\n        p.cueSet2Completed.push(currentCue);\n        if(currentCue % 9 === 1){\n          p.backgroundHexagons = [];\n        } \n        const colour = currentCue === 27 ? 0 : p.color(p.random(255), p.random(255), p.random(255)),\n          hasFill = (currentCue > 18 && currentCue <= 27);\n        p.backgroundHexagons.push(new BackgroundHexagon(p, p.width / 2, p.height / 2, colour, hasFill));\n      }\n    };\n\n    p.animateHexagons1 = (x, y, r) => {\n      let count = p.i - 1;\n      while (count < p.i) {\n        p.strokeWeight(p.width / 288);\n        p.stroke(\n          p.getColourValue(p.strokeColour.r, count),\n          p.getColourValue(p.strokeColour.g, count),\n          p.getColourValue(p.strokeColour.b, count)\n        );\n        p.fill(\n          p.getColourValue(p.fillColour.r, count),\n          p.getColourValue(p.fillColour.g, count),\n          p.getColourValue(p.fillColour.b, count),\n          63 + (count / 8)\n        );\n        for(let i = 1; i <= p.innerHexCount; i++) {\n          p.hexagon(x + count, y + count, r / i);\n          p.hexagon(x + count, y - count, r / i);\n          p.hexagon(x + count, y, r / i);\n          p.hexagon(x - count, y, r / i);\n          p.hexagon(x - count, y + count, r / i);\n          p.hexagon(x - count, y - count, r / i);\n          p.hexagon(x, y + count, r / i);\n          p.hexagon(x, y - count, r / i);\n        }\n        \n        count = count + 3;\n      }\n    };\n\n    p.hexagon = (x, y, r) => {\n      const radius = r / 2;\n      p.angleMode(p.RADIANS);\n      var angle = p.TWO_PI / 6;\n      p.beginShape();\n      for (let a = p.TWO_PI / 12; a < p.TWO_PI + p.TWO_PI / 12; a += angle) {\n        let sx = x + p.cos(a) * radius;\n        let sy = y + p.sin(a) * radius;\n        p.vertex(sx, sy);\n      }\n      p.endShape(p.CLOSE);\n    };\n\n    p.loadColours = () => {\n      for (let i = 0; i < p.noteSet1.length; i++) {\n        const colours1 = ShuffleArray(p.coloursArray);\n        const colourSet = {\n          strokeColour: {\n            r: colours1[0],\n            g: colours1[1],\n            b: colours1[2],\n          },\n        };\n        const colours2 = colours1.reverse();\n        colourSet.fillColour = {\n          r: colours2[0],\n          g: colours2[1],\n          b: colours2[2],\n        };\n        p.colourSets.push(colourSet);\n      }\n    }\n\n\n    p.getColourValue = (value, negation) => {\n      if (value === \"variable\") {\n        return 255 - negation;\n      }\n      return value;\n    };\n\n    p.mousePressed = () => {\n      if (p.player.state === \"started\") {\n        // Use the Tone.Transport to pause audio\n        Tone.Transport.pause();\n      } \n      else if (p.player.state === \"stopped\") {\n        // Use the Tone.Transport to start again\n        Tone.Transport.start();\n      }\n    };\n\n    p.creditsLogged = false;\n\n    p.logCredits = () => {\n      if (\n        !p.creditsLogged &&\n        parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n      ) {\n        p.creditsLogged = true;\n        console.log(\"\\n\", \"\\n\");\n      }\n    };\n\n    p.reset = () => {\n      p.clear();\n      p.background(0);\n    };\n\n    p.updateCanvasDimensions = () => {\n      p.canvasWidth = window.innerWidth;\n      p.canvasHeight = window.innerHeight;\n      p.createCanvas(p.canvasWidth, p.canvasHeight);\n      p.redraw();\n    };\n\n    if (window.attachEvent) {\n      window.attachEvent(\"onresize\", function () {\n        p.updateCanvasDimensions();\n      });\n    } else if (window.addEventListener) {\n      window.addEventListener(\n        \"resize\",\n        function () {\n          p.updateCanvasDimensions();\n        },\n        true\n      );\n    } else {\n      //The browser does not support Javascript event binding\n    }\n  };\n\n  useEffect(() => {\n    new p5(Sketch, sketchRef.current);\n  }, []);\n\n  return <div ref={sketchRef}></div>;\n};\n\nexport default P5Sketch;\n","import P5Sketch from './P5Sketch'\n\nfunction App() {\n  return (\n    <P5Sketch/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}